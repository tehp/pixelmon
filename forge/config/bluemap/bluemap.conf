##                          ##
##         BlueMap          ##
##                          ##
##  by Blue (Lukas Rieger)  ##
##  http://bluecolored.de/  ##
##                          ##

# By changing the setting (accept-download) below to TRUE you are indicating that you have accepted mojang's EULA (https://account.mojang.com/documents/minecraft_eula),
# you confirm that you own a license to Minecraft (Java Edition)
# and you agree that BlueMap will download and use this file for you: https://launcher.mojang.com/v1/objects/0f275bc1547d01fa5f56ba34bdc87d981ee12daf/client.jar
# (Alternatively you can download the file yourself and store it here: <data>/minecraft-client-1.12.2.jar)
# This file contains resources that belong to mojang and you must not redistribute it or do anything else that is not compliant with mojang's EULA.
# BlueMap uses resources in this file to generate the 3D-Models used for the map and texture them. (BlueMap will not work without those resources.)
# 2020-05-24T17:15:22
accept-download: true

# This changes the amount of threads that BlueMap will use to render the maps.
# A higher value can improve render-speed but could impact performance on the host machine.
# This should be always below or equal to the number of available processor-cores.
# Zero or a negative value means the amount of of available processor-cores subtracted by the value.
# (So a value of -2 with 6 cores results in 4 render-processes)
# Default is -2
renderThreadCount: -2

# The folder where bluemap saves data-files it needs during runtime or to save e.g. the render-progress to resume it later.
data: "bluemap"

# The webroot of the website that displays the map.
webroot: "bluemap/web"

# Unncomment this to override the path where bluemap stores the data-files.
# Default is "<webroot>/data"
#webdata: "path/to/data/folder"

# If the web-application should use cookies to save the configurations of a user.
useCookies: false

webserver {
	# With this setting you can disable the integrated web-server.
	# This is usefull if you want to only render the map-data for later use, or if you setup your own webserver.
	# Default is enabled
	enabled: true

	# The IP-Adress that the webserver binds to.
	# If this setting is commented out, bluemap tries to find the default ip-adress of your system.
	# If you only want to access it locally use "localhost".
	#ip: "localhost"
	ip: "165.227.54.247"

	# The port that the webserver listenes to.
	# Default is 8100
	port: 8080

	# Max number of simultaneous connections that the webserver allows
	# Default is 100
	maxConnectionCount: 100
}

# This is an array with multiple configured maps.
# You can define multiple maps, for different worlds with different render-settings here
maps: [

	{
		# The id of this map
		# Should only contain word-charactes: [a-zA-Z0-9_]
		# Changing this value breaks your existing renders.
		id: "world"
	
		# The name of this map
		# This defines the display name of this map, you can change this at any time.
		# Default is the id of this map
		name: "World"
		
		# The path to the save-folder of the world to render.
		world: "world"
		
		# The position on the world where the map will be centered if you open it.
		# You can change this at any time.
		# This defaults to the world-spawn if you don't set it.
		#startPos: [500, -820]
		
		# The color of thy sky as a hex-color
		# You can change this at any time.
		# Default is "#7dabff"
		skyColor: "#7dabff"

		# Defines the ambient light-strength that every block is recieving, regardless of the sunlight/blocklight.
		# 0 is no ambient light, 1 is fully lighted.
		# You can change this at any time.
		# Default is 0
		ambientLight: 0

		# If this is false, BlueMap tries to omit all blocks that are not visible from above-ground.
		# More specific: Block-Faces that have a sunlight/skylight value of 0 are removed.
		# This improves the performance of the map on slower devices by a lot, but might cause some blocks to disappear that should normally be visible.
		# Changing this value requires a re-render of the map.
		# Default is false
		renderCaves: false
		
		# With the below values you can limit the map-render.
		# This can be used to ignore the nethers ceiling or render only a certain part of a world.
		# Changing this values might require a re-render of the map, already rendered tiles outside the limits will not be deleted.
		# Default is no min or max value (= infinite bounds)
		#minX: -4000
		#maxX: 4000
		#minZ: -4000
		#maxZ: 4000
		#minY: 50
		#maxY: 126
				
		# Using this, BlueMap pretends that every Block out of the defined render-bounds is AIR,
		# this means you can see the blocks where the world is cut (instead of having a see-through/xray view).
		# This has only an effect if you set some render-bounds above.
		# Changing this value requires a re-render of the map.
		# Default is true
		renderEdges: true
		
		# With this set to true, the generated files for this world are compressed using gzip to save A LOT of space.
		# Files will be only 5% as big with compression!
		# Note: If you are using NGINX or Apache to host your map, you can configure them to serve the compressed files directly.
		# This is much better than disabling the compression.
		# Changing this value requires a re-render of the map.
		# Default is true
		useCompression: true
	}
	
	# Here another example for the End-Map
	# Things we don't want to change from default we can just omit
	{
		id: "end"
		name: "End"
		world: "world/DIM1"
		
		# We dont want a blue sky in the end
		skyColor: "#080010"
		
		# In the end is no sky-light, so we need to enable this or we won't see anything.
		renderCaves: true
		
		# Same here, we don't want a dark map. But not completely lighted, so we see the effect of e.g torches.
		ambientLight: 0.6
	}
	
	# Here another example for the Nether-Map
	{
		id: "nether"
		name: "Nether"
		world: "world/DIM-1"
		
		skyColor: "#290000"
		
		renderCaves: true
		ambientLight: 0.6
		
		# We slice the whole world at y:90 so every block above 90 will be air.
		# This way we don't render the nethers ceiling.
		maxY: 90
		renderEdges: true
	}

]
